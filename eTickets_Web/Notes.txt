25.12.2023-Gün:1
----------------

1. Sistem içersinde kullanılacak olan Modellerin(table) yaratılması.
	- Actor
	- Cinema
	- Movie
	- Producer
	- Director
	- MovieCategory 

	! Her modelde ortak olabilecek alanları (bu örnekte Id alanları) hepsi için ayrı ayrı belirtmek yerine tabanda kullanılacak bir Interface yapısı yararlı olacaktır. Yani modeller bu Interface'i implement ederek gerekli alanları üzerlerine alabileceklerdir.

	! Diğer taraftan bir depo(Repository) yapısı kullanmak faydalı olacaktır. Tüm modeller üzerinde kullanılacak olan kayıtları listeleme, kayıt ekleme/güncelleme/silme vs vs. işlemleri için..

	-- Modellerin yaratılması

2. Gerekli Nuget paketlerinin yüklenmesi (db..EntityFramework ile ilgili)

3. AppDbContext yapısını oluşturalım.
	Normalde EF'in DbContext sınıfından Inherit yapardık. Fakat bu projede ilerde Identity(Authorization,Authentication) [Kimlik Denetimi(Yetkilendirme,Kimlik Doğrulama)] yapısı kullanılacağı için DbContext den değil de hazır bu tür şeyler için yapılmış IdentityDbContext kullanılacak.Bu kullanımdan önce bir ApplicationUser sınıfı yaratalım.

4. Program.cs altına -> DbContext servisinin eklenmesi(registre edilmesi) (parametresiz olarak)

5. Örnek verilerle db nin yaratılabilmesi için bir AppDbInitializer.cs yaratalım


2.gün
-----

Gerekli tüm controller ların üretilmesi
Actor
Cinema
Movie
Producer



3.gün (27.12.23)
----------------
- Actor "
- Cinema model tarafında ve index view da değişiklikler yapıldı. Interface yapısı implemente edildi.
- Producer "

- Bu 3 tablo daha basit bir yapıda idi. Fakat Movie modeli biraz farklı. Bu yüzden biraz daha farklı bir yönden yaklaşabiliriz.Yani ViewModel(DataTransferObject) yapısını kullanma durumu.


4.gün (28.12.23)
----------------
- Ana ekranda Kullanıcı Giriş/Kayıt bölümlerinin yapılması

- Buna göre sisteme giren kullanıcı tipine göre frontend tarafında yapılacak değişiklikler



